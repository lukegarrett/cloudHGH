tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: latest
        update_cache: yes
      become: yes

    - name: Docker mod
      replace:
        path: /lib/systemd/system/docker.service
        regexp: 'ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock'
        replace: 'ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd'
    
    - name: Restart service docker, in all cases, also issue daemon-reload to pick up config changes
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: docker

    - name: Install Curl
      shell: "sudo apt install -y apt-transport-https ca-certificates curl"

    - name: Curl Kubernetes Key
      shell: "sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg"

    - name: Add Kubernetes Key
      shell: "echo \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-focal main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list" 

    - name: Install Kubernetes
      apt:
        pkg:
          - kubeadm
          - kubelet
          - kubectl
          - kubernetes-cni
        state: latest
        update_cache: true

    - name: Disable Swap
      shell: "sudo swapoff -a" 

    # this is in an attempt to set the public ip ahead of time since setting listener ip during kubeadm init was timing out
    - name: Configure Node IP (MASTER)
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ play_hosts[0] }}
        when: inventory_hostname == play_hosts[0]

    # this is in an attempt to set the public ip ahead of time since setting listener ip during kubeadm init was timing out
    - name: Configure Node IP (WORKER 01)
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ play_hosts[1] }}
        when: inventory_hostname == play_hosts[1]

    - name: Add Entry to Hosts File (MASTER)
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ play_hosts[0] }} kubemaster kubeworker1" #this should work for replacing relevant ip addresses, verify TODO
        when: inventory_hostname == play_hosts[0]

    - name: Add Entry to Hosts File (WORKER 01)
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ play_hosts[1] }} kubeworker2" 
        when: inventory_hostname == play_hosts[1]

    - name: Restart Kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    # known issue: unable to define listener ip during init because of timeout
    - name: Initialize Kubernetes Cluster
      shell: "sudo kubeadm init --node-name kubemaster --pod-network-cidr=10.244.0.0/16"
      when: inventory_hostname == play_hosts[0]

    - name: Commmit Recommended Kubernetes Shell Commands
      command: "{{ item }}"
      with_items:
      - mkdir -p $HOME/.kube
      - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
      - sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Setup the container networking provider and the network policy engine
      shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml" 

    - name: Taint Master Node
      shell: "kubectl taint nodes kubemaster node-role.kubernetes.io/master:NoSchedule-"
      when: inventory_hostname == play_hosts[0]

      # Setup master / node connection

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command
      when: inventory_hostname == play_hosts[0]

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
      when: inventory_hostname == play_hosts[0]

    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777
      when: inventory_hostname == play_hosts[1]

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh
      when: inventory_hostname == play_hosts[1]

      # Known issues to fix:
      # Need to separate master playbook and node playbook without using 'when' clause
      # When running kubeadm init, specifying the listener ip would result in a timeout... unknown if node can connect to public ip
